@use "sass:color";

$bar-spacing: $spacing * 0.3;
$button-radius: $radius;

@mixin panel-button($flat: true, $reactive: true) {
    @include accs-button($flat, $reactive);

    > * {
        border-radius: $button-radius;
        margin: $bar-spacing;
    }

    label,
    image {
        font-weight: bold;
    }

    > * {
        padding: $padding * 0.4 $padding * 0.8;
    }
}

.bar {
    transition: $transition;
    // bg was here
    background-color: transparent;

    .panel-button {
        @include panel-button;

        &:not(.flat) {
            @include accs-button($flat: false);
        }
    }

    .tray-item {
        > * {
            min-width: 15pt;
            min-height: 20pt;
            transition: $transition * 0.5;
        }

        &:hover {
            background-color: #29222C;
            color: transparentize($fg, 0.8);
        }
    }

    .workspaces {
        label {
            min-width: 20pt;
            min-height: 20pt;
            border-radius: 50%;
            box-shadow: inset 0 0 0 $border-width $border-color;
            //margin: 0 $padding * 0.5;
            transition: $transition * 0.5;
            background-color: transparentize($fg, 0.8);

            &:hover {
                background-color: #29222C;
                color: #EDCBED;
            }

            &.occupied {
                background-color: transparent;
                box-shadow: inset 0 0 0 $border-width transparent;
            }

            &.active {
                // background-color: $primary-bg;
                background-image: $active-gradient;
            }
        }

        // TODO: how to make it part of event-box?
        .ws-box:hover {
            background-color: #29222C;
            color: #EDCBED;

            min-width: 20pt;
            min-height: 20pt;
            border-radius: 50%;
            box-shadow: inset 0 0 0 $border-width $border-color;
            //margin: 0 $padding * 0.5;
            transition: $transition * 0.5;
            background-color: transparentize($fg, 0.8);
        }

        &.active,
        &:active {
            label {
                background-color: transparentize($primary-fg, 0.3);

                &.occupied {
                    background-color: transparentize($primary-fg, 0.15);
                }

                &.active {
                    background-color: $primary-fg;
                }
            }
        }
    }

    .media label {
        margin: 0 ($spacing * 0.5);
    }

    .taskbar .indicator.active {
        background-color: $primary-bg;
        border-radius: $radius;
        min-height: 4pt;
        min-width: 6pt;
        margin: 2pt;
    }

    .powermenu.colored,
    .recorder {
        image {
            color: transparentize($error-bg, 0.3);
        }

        &:hover image {
            color: transparentize($error-bg, 0.15);
        }

        &:active image {
            color: $primary-fg;
        }
    }

    .quicksettings > box > box {
        @include spacing(
            $spacing: if($bar-spacing==0, $padding / 2, $bar-spacing)
        );
    }

    .quicksettings:not(.active):not(:active) {
        .bluetooth {
            color: $primary-bg;

            label {
                font-size: $font-size * 0.7;
                color: $fg;
                text-shadow: $text-shadow;
            }
        }
    }

    .battery-bar {
        > * {
            padding: 0;
        }

        &.bar-hidden > box {
            padding: 0 $spacing * 0.5;

            image {
                margin: 0;
            }
        }

        levelbar * {
            all: unset;
            transition: $transition;
        }

        .whole {
            @if $shadows {
                image {
                    -gtk-icon-shadow: $text-shadow;
                }

                label {
                    text-shadow: $text-shadow;
                }
            }
        }

        .regular image {
            margin-left: $spacing * 0.5;
        }

        trough {
            @include widget;
            min-height: 12pt;
            min-width: 12pt;
        }

        .regular trough {
            margin-right: $spacing * 0.5;
        }

        block {
            margin: 0;

            &:last-child {
                border-radius: 0 $button-radius $button-radius 0;
            }

            &:first-child {
                border-radius: $button-radius 0 0 $button-radius;
            }
        }

        .vertical {
            block {
                &:last-child {
                    border-radius: 0 0 $button-radius $button-radius;
                }

                &:first-child {
                    border-radius: $button-radius $button-radius 0 0;
                }
            }
        }

        &.low image {
            color: $error-bg;
        }

        &.charging image {
            color: $charging-bg;
        }

        &:active image {
            color: $primary-fg;
        }
    }
}

.bar.transparent {
    background-color: transparent;

    .panel-button {
        &:hover > * {
            box-shadow:
                1px 1px 3px 0 $shadow-color,
                inset 0 0 0 $border-width $border-color;
            background-color: $bg;
        }

        &:not(:hover):not(.active) {
            label,
            image {
                text-shadow: $text-shadow;
                -gtk-icon-shadow: $text-shadow;
            }
        }
    }

    .workspaces label {
        box-shadow:
            inset 0 0 0 $border-width $border-color,
            1px 1px 3px 0 $shadow-color;
    }

    .battery-bar trough {
        box-shadow: 1px 1px 3px 0 $shadow-color;
    }
}
