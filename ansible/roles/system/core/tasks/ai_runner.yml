---
- name: Ensure podman
  package:
    name: podman
    state: present

- name: Create ai-runner system user
  user:
    name: ai-runner
    state: present
    system: true
    shell: /bin/bash
    home: /srv/ai-runner
    groups: video,render,systemd-journal
    append: true

- name: Set selinux context for ai-runner home
  sefcontext:
    target: /srv/ai-runner
    setype: user_home_dir_t
    state: present

- name: Ensure container directory for ai-runner
  file:
    path: /srv/ai-runner/.local/share/containers
    state: directory
    mode: "0700"
    owner: ai-runner
    group: ai-runner

- name: Set selinux context for ai-runner container directory
  sefcontext:
    target: /srv/ai-runner/.local/share/containers
    setype: container_file_t
    state: present

# TODO: this should be handler but for whatever reason sefcontext doesn't report change
- name: Apply new selinux contexts
  command:
    cmd: restorecon -RFiv /srv/ai-runner
  register: restorecon_ai_runner
  changed_when: restorecon_ai_runner.stdout_lines | length > 0

- name: Probe if ai-runner user is enabled for linger
  command:
    cmd: loginctl show-user ai-runner --property=Linger --value
  register: probe_ai_runner_linger
  ignore_errors: true
  changed_when: false

- name: Ensure enable-linger for ai-runner
  command:
    cmd: loginctl enable-linger ai-runner
  when: probe_ai_runner_linger.stdout != "yes"

- name: Ensure XDG_RUNTIME_DIR for ai-runner in profile
  lineinfile:
    path: /srv/ai-runner/.bash_profile
    line: "export XDG_RUNTIME_DIR=/run/user/$(id -u)"
    create: true

# this block for subuid and subgid is messy but there isn't a tool for dynamic
# assigning of subuid and subgid ranges for system users and I don't want to make it
- name: Check if ai-runner exists in /etc/subuid
  command:
    cmd: grep -qs "^ai-runner:" /etc/subuid
  register: probe_ai_runner_subuid
  ignore_errors: true
  changed_when: false

- name: Ensure ai-runner in /etc/subuid
  shell:
    cmd: |
      NEW_SUBUID=$(($(tail -1 /etc/subuid |awk -F ":" '{print $2}')+65536))
      usermod --add-subuids $NEW_SUBUID-$((NEW_SUBUID+65535)) ai-runner
  when: probe_ai_runner_subuid.rc != 0

- name: Check if ai-runner exists in /etc/subgid
  command:
    cmd: grep -qs "^ai-runner:" /etc/subgid
  register: probe_ai_runner_subgid
  ignore_errors: true
  changed_when: false

- name: Ensure ai-runner in /etc/subgid
  shell:
    cmd: |
      NEW_SUBGID=$(($(tail -1 /etc/subgid |awk -F ":" '{print $2}')+65536))
      usermod --add-subgids $NEW_SUBGID-$((NEW_SUBGID+65535)) ai-runner
  when: probe_ai_runner_subgid.rc != 0

- name: Podman system migrate to apply subuid and subgid changes
  command:
    cmd: podman system migrate
  become_user: ai-runner
  when: probe_ai_runner_subuid.rc != 0 or probe_ai_runner_subgid.rc != 0

- name: Put compose file in ai-runner shared directory
  copy:
    src: ollama-openwebui-kube.yml
    dest: /srv/ai-runner/ollama-openwebui-kube.yml
    owner: ai-runner
    group: ai-runner
    mode: "0640"

- name: Ensure systemd user directory for ai-runner
  file:
    path: /srv/ai-runner/.config/systemd/user
    state: directory
    mode: "0750"
    owner: ai-runner
    group: ai-runner

- name: Install ollama-openwebui systemd user service unit
  copy:
    src: ollama-openwebui.service
    dest: /srv/ai-runner/.config/systemd/user/ollama-openwebui.service
    owner: ai-runner
    group: ai-runner
    mode: "0644"
  notify:
    - Reload systemd daemon
    - Restart ollama-openwebui

- name: Flush handlers before trying to run the service
  meta: flush_handlers

- name: Activate ollama-openwebui systemd service unit
  become_user: ai-runner
  service:
    name: ollama-openwebui.service
    state: started
    scope: user
    enabled: true
    masked: false
